#######################################
#### Workflow for FastQC, MultiQC, ####
## and trimming of FASTQ read files. ##
#######################################

## - Information about project & samples - ##
# Original fastq files were obtained from the Short Read Archive (SRA).
# All sample names (indicated by {sample}) include both the Sequence Read Archive (SRA) Sample ID (SRS#) and the treatment group - e.g. SRS5770694_C1abs.
# SRA Project ID: SRP234876; Bioproject ID: PRJNA593775; Gene Expression Omnibus Series ID: GSE141520

## - Using This Script - ##
# See README file in GitHub before running these scripts.
# Remember to change variables under the heading "USERS SHOULD CHANGE THE FOLLOWING VARIABLES"

#####################
## Start of Script ##
#####################

import os

## - USERS SHOULD CHANGE THE FOLLOWING VARIABLES - ##
# Tool Paths
fastqc_path = "/home/avannan/miniconda3/envs/rodent_addiction/opt/fastqc-0.11.9/fastqc" # Version 0.11.9
multiqc_path = "/home/avannan/miniconda3/envs/rodent_addiction/bin/multiqc" # Version 1.9
bbduksh_path = "/home/avannan/miniconda3/envs/rodent_addiction/opt/bbmap-38.90-3/bbduk.sh" # Version 38.90
# References
adapter_fasta = "/home/avannan/miniconda3/envs/rodent_addiction/opt/bbmap-38.90-3/resources/adapters.fa"
# Starting Directory
start_dir = "/data/CEM/wilsonlab/projects/rodent_addiction/"
## -- END -- ##

# Config file
configfile: "carpenter_config.json"

# Directory Variables
# Misc
misc_dir = os.path.join(start_dir, config["misc_dir"]) # Contains lists for MulitQC by sequencing cohort/abstinence group
# FASTQs
fastq_dir = os.path.join(start_dir, config["fastq_dir"]) # Initial FASTQs
fastqc_dir = os.path.join(start_dir, config["fastqc_dir"]) # FastQC/MultiQC for initial FASTQs
# Trimmed FASTQs
trimmed_fastq_dir = os.path.join(start_dir, config["trimmed_fastq_dir"]) # Trimmed FASTQs
trimmed_fastqc_dir = os.path.join(start_dir, config["trimmed_fastqc_dir"]) # FASTQC/MultiQC for trimmed FASTQs

######################
## All Output Files ##
######################

rule all:
	input:
		# FASTQs
		# Initial quality control checks on individual FASTQ files (FastQC)
		# HTML files
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq1_fastqc.html"), sample = config["28abs_ALL"]),
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq2_fastqc.html"), sample = config["28abs_ALL"]),
		# Zip files
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq1_fastqc.zip"), sample = config["28abs_ALL"]),
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq2_fastqc.zip"), sample = config["28abs_ALL"]),
		# Initial quality control check on set of FASTQ files (MultiQC)
		os.path.join(fastqc_dir, "carpenter_28abs_multiqc.html"),

		# TRIMMED FASTQs
		# Trimmed FASTQ files after quality control
		expand(os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq1.fastq"), sample = config["28abs_ALL"]),
		expand(os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq2.fastq"), sample = config["28abs_ALL"]),
		# Stats files from trimming
		expand(os.path.join(trimmed_fastq_dir, "stats/carpenter_{sample}_bbduk_stats.txt"), sample = config["28abs_ALL"]),
		# Quality control checks on trimmed FASTQ files
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq1_fastqc.html"), sample = config["28abs_ALL"]),
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq2_fastqc.html"), sample = config["28abs_ALL"]),
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq1_fastqc.zip"), sample = config["28abs_ALL"]),
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq2_fastqc.zip"), sample = config["28abs_ALL"]),
		# Quality control check on set of trimmed FASTQ files
		os.path.join(trimmed_fastqc_dir, "carpenter_28abs_trim_multiqc.html")


##############
## 01_fastq ##
##############

#####################
## Quality Reports ##
#####################

rule initial_fastqc:
	input:
		FQ1 = os.path.join(fastq_dir, "carpenter_{sample}_fq1.fastq"),
		FQ2 = os.path.join(fastq_dir, "carpenter_{sample}_fq2.fastq")
	output:
		FQ1_HTML = os.path.join(fastqc_dir, "carpenter_{sample}_fq1_fastqc.html"),
		FQ2_HTML = os.path.join(fastqc_dir, "carpenter_{sample}_fq2_fastqc.html"),
		FQ1_ZIP = os.path.join(fastqc_dir, "carpenter_{sample}_fq1_fastqc.zip"),
		FQ2_ZIP = os.path.join(fastqc_dir, "carpenter_{sample}_fq2_fastqc.zip")
	params:
		fastqc = fastqc_path,
		fastqc_dir = fastqc_dir
	shell:
		"""
		{params.fastqc} {input.FQ1} {input.FQ2} -o {params.fastqc_dir}
		"""

rule initial_multiqc_execute:
	input:
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq1_fastqc.zip"), sample = config["28abs_ALL"]),
		expand(os.path.join(fastqc_dir, "carpenter_{sample}_fq2_fastqc.zip"), sample = config["28abs_ALL"])
	output:
		MULTIQC_28ABS_REPORT = os.path.join(fastqc_dir, "carpenter_28abs_multiqc.html")
	message: "Running MultiQC for FastQC reports on initial FASTQ files."
	params:
		multiqc = multiqc_path,
		trimmed_multiqc_dir = trimmed_fastqc_dir
	shell:
		"""
		export LC_ALL=en_US.UTF-8 && export LANG=en_US.UTF-8 && \
		{params.multiqc} -f {params.trimmed_multiqc_dir} - n {output.MULTIQC_28ABS_REPORT} --interactive --verbose
		"""

######################
## 02_trimmed_fastq ##
######################

##############
## Trimming ##
##############

rule trim_bbduk:
	input:
		FQ1 = os.path.join(fastq_dir, "carpenter_{sample}_fq1.fastq"),
		FQ2 = os.path.join(fastq_dir, "carpenter_{sample}_fq2.fastq"),
		ADAPTER = adapter_fasta
	output:
		TRIMMED_FQ1 = os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq1.fastq"),
		TRIMMED_FQ2 = os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq2.fastq"),
		STATS = os.path.join(trimmed_fastq_dir, "stats/carpenter_{sample}_bbduk_stats.txt")
	params:
		bbduksh = bbduksh_path,
		trimq = 30,
		minlen = 75, # Half of read length; this is different for 1abs and 28abs samples
		maq = 20
	shell:
		"""
		{params.bbduksh} -Xmx3g in1={input.FQ1} in2={input.FQ2} out1={output.TRIMMED_FQ1} out2={output.TRIMMED_FQ2} \
		ftm=5 ref={input.ADAPTER} ktrim=r k=21 mink=11 hdist=2 stats={output.STATS} tbo tpe \
		qtrim=rl trimq={params.trimq} minlen={params.minlen} maq={params.maq}
		"""

#####################
## Quality Reports ##
#####################

rule trimmed_fastqc:
	input:
		TRIMMED_FQ1 = os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq1.fastq"),
		TRIMMED_FQ2 = os.path.join(trimmed_fastq_dir, "carpenter_{sample}_trim_fq2.fastq")
	output:
		TRIMMED_FQ1_HTML = os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq1_fastqc.html"),
		TRIMMED_FQ2_HTML = os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq2_fastqc.html"),
		TRIMMED_FQ1_ZIP = os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq1_fastqc.zip"),
		TRIMMED_FQ2_ZIP = os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq2_fastqc.zip")
	params:
		fastqc = fastqc_path,
		trimmed_fastqc_dir = trimmed_fastqc_dir
	shell:
		"""
		{params.fastqc} {input.TRIMMED_FQ1} {input.TRIMMED_FQ2} -o {params.trimmed_fastqc_dir}
		"""

rule trimmed_multiqc:
	input:
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq1_fastqc.zip"), sample = config["28abs_ALL"]),
		expand(os.path.join(trimmed_fastqc_dir, "carpenter_{sample}_trim_fq2_fastqc.zip"), sample = config["28abs_ALL"])
	output:
		TRIMMED_MULTIQC_REPORT = os.path.join(trimmed_fastqc_dir, "carpenter_28abs_trim_multiqc.html")
	message: "Running MultiQC for FastQC reports on -trimmed- FASTQ files."
	params:
		multiqc = multiqc_path,
		trimmed_multiqc_dir = trimmed_fastqc_dir
	shell:
		"""
		export LC_ALL=en_US.UTF-8 && export LANG=en_US.UTF-8 && \
		{params.multiqc} -f {params.trimmed_multiqc_dir} -n {output.TRIMMED_MULTIQC_REPORT} --interactive --verbose
		"""
